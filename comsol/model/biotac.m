function out = model
%
% biotac.m
%
% Model exported on Jul 9 2020, 17:36 by COMSOL 5.5.0.359.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/home/bsadrfa/behzad/projects/biotac/comsol/model');

model.label('biotac.mph');

model.param.set('ix0', '0', 'initial (x)');
model.param.set('iy0', '0', 'initial (y)');
model.param.set('iz0', '-10.56', 'initail (z)');
model.param.set('itheta', '0');
model.param.set('iphi', '0');
model.param.set('irot', '0', 'rotation');
model.param.set('iw', '20', 'width');
model.param.set('il', '20', 'lenght');
model.param.set('mu', '2', 'friction coefficient');
model.param.group.create('par3');
model.param('par3').set('isn', '.5', 'strain in normal direction');
model.param('par3').set('inx', '0', 'normal direction (x)');
model.param('par3').set('iny', '0', 'normal direction (y)');
model.param('par3').set('inz', '1', 'normal direction (z)');
model.param('par3').set('istep', '0.1', 'step in tangent direction');
model.param('par3').set('itx', '0', 'tangent direction (x)');
model.param('par3').set('ity', '1', 'tangent direction (y)');
model.param('par3').set('itz', '0', 'tangent direction (z)');
model.param('par3').set('para', '0', 'computation parameter');
model.param('par3').set('isc', '0', 'strain in normal direction for initial contact');
model.param('par3').set('istop', '8', 'stop in tangent direction');
model.param.group.create('par4');
model.param('par4').set('split_a', '0', 'a in ax+by+cz=d');
model.param('par4').set('split_b', '0', 'b (note a^2+b^2+c^2==1)');
model.param('par4').set('split_c', '-1', 'c');
model.param('par4').set('split_d', '7.5', 'd');
model.param.group.create('par5');
model.param('par5').set('p_0', '1750', 'inital pressure');
model.param('par5').set('vol_0', '3.0524E-6', 'half-ellipsoid volume');
model.param.group.create('par6');
model.param('par6').set('c01', '0.041/35*26');
model.param('par6').set('c10', '0.162/35*26');
model.param.group.create('par7');
model.param('par7').set('idx', 'isn*inx+itx*para', 'displacement wrt to initial contact (x)');
model.param('par7').set('idy', 'isn*iny+ity*para', 'displacement wrt to initial contact (y)');
model.param('par7').set('idz', 'isn*inz+itz*para', 'displacement wrt to initial contact (y)');
model.param('par7').set('icx', 'ix0+isc*inx', 'inital contact (x)');
model.param('par7').set('icy', 'iy0+isc*iny', 'inital contact (y)');
model.param('par7').set('icz', 'iz0+isc*inz', 'inital contact (z)');
model.param('par7').set('ix', 'icx+idx');
model.param('par7').set('iy', 'icy+idy');
model.param('par7').set('iz', 'icz+idz');
model.param.label('indenter frame');
model.param('par3').label('indenter motion');
model.param('par4').label('mesh');
model.param('par5').label('initial values');
model.param('par6').label('materials');
model.param('par7').label('indenter positions');

model.component.create('comp1', true);

model.component('comp1').geom.create('geom1', 3);

model.result.table.create('tbl1', 'Table');
model.result.table.create('mm1', 'Table');

model.component('comp1').mesh.create('mesh2');
model.component('comp1').mesh.create('mesh3');
model.component('comp1').mesh.create('mesh4');

model.component('comp1').geom('geom1').lengthUnit('mm');
model.component('comp1').geom('geom1').geomRep('comsol');
model.component('comp1').geom('geom1').create('elp1', 'Ellipsoid');
model.component('comp1').geom('geom1').feature('elp1').label('outer');
model.component('comp1').geom('geom1').feature('elp1').set('semiaxes', [14.23 9.94 9.94]);
model.component('comp1').geom('geom1').create('blk1', 'Block');
model.component('comp1').geom('geom1').feature('blk1').set('pos', [-20 -11 0]);
model.component('comp1').geom('geom1').feature('blk1').set('size', [40 22 11]);
model.component('comp1').geom('geom1').create('dif1', 'Difference');
model.component('comp1').geom('geom1').feature('dif1').label('outside');
model.component('comp1').geom('geom1').feature('dif1').selection('input').set({'elp1'});
model.component('comp1').geom('geom1').feature('dif1').selection('input2').set({'blk1'});
model.component('comp1').geom('geom1').create('elp2', 'Ellipsoid');
model.component('comp1').geom('geom1').feature('elp2').label('inner');
model.component('comp1').geom('geom1').feature('elp2').set('semiaxes', [14.03 9.74 9.74]);
model.component('comp1').geom('geom1').create('blk2', 'Block');
model.component('comp1').geom('geom1').feature('blk2').label('Block 4');
model.component('comp1').geom('geom1').feature('blk2').set('pos', [-20 -11 0]);
model.component('comp1').geom('geom1').feature('blk2').set('size', [40 22 11]);
model.component('comp1').geom('geom1').create('dif2', 'Difference');
model.component('comp1').geom('geom1').feature('dif2').label('inside');
model.component('comp1').geom('geom1').feature('dif2').selection('input').set({'elp2'});
model.component('comp1').geom('geom1').feature('dif2').selection('input2').set({'blk2'});
model.component('comp1').geom('geom1').create('dif3', 'Difference');
model.component('comp1').geom('geom1').feature('dif3').label('skin');
model.component('comp1').geom('geom1').feature('dif3').set('selresult', true);
model.component('comp1').geom('geom1').feature('dif3').set('selresultshow', 'all');
model.component('comp1').geom('geom1').feature('dif3').set('color', 'custom');
model.component('comp1').geom('geom1').feature('dif3').set('customcolor', [0.0235294122248888 0.6509804129600525 0.12941177189350128]);
model.component('comp1').geom('geom1').feature('dif3').set('keep', true);
model.component('comp1').geom('geom1').feature('dif3').selection('input').set({'dif1'});
model.component('comp1').geom('geom1').feature('dif3').selection('input2').set({'dif2'});
model.component('comp1').geom('geom1').create('del1', 'Delete');
model.component('comp1').geom('geom1').feature('del1').selection('input').init;
model.component('comp1').geom('geom1').feature('del1').selection('input').set({'dif1'});
model.component('comp1').geom('geom1').create('wp2', 'WorkPlane');
model.component('comp1').geom('geom1').feature('wp2').label('Work Plane Split');
model.component('comp1').geom('geom1').feature('wp2').set('planetype', 'normalvector');
model.component('comp1').geom('geom1').feature('wp2').set('normalvector', {'split_a' 'split_b' 'split_c'});
model.component('comp1').geom('geom1').feature('wp2').set('normalcoord', {'0' '0' 'split_d/split_c'});
model.component('comp1').geom('geom1').feature('wp2').set('unite', true);
model.component('comp1').geom('geom1').create('parf1', 'PartitionFaces');
model.component('comp1').geom('geom1').feature('parf1').set('partitionwith', 'workplane');
model.component('comp1').geom('geom1').feature('parf1').selection('face').set('dif3(1)', [1 3 4 5 6 7 8 9]);
model.component('comp1').geom('geom1').create('sel1', 'ExplicitSelection');
model.component('comp1').geom('geom1').feature('sel1').label('skin-outside-boundary');
model.component('comp1').geom('geom1').feature('sel1').selection('selection').init(2);
model.component('comp1').geom('geom1').feature('sel1').selection('selection').set('parf1(1)', [1 2 6 7 10 12 14 17]);
model.component('comp1').geom('geom1').feature('sel1').set('groupcontang', true);
model.component('comp1').geom('geom1').create('sel3', 'ExplicitSelection');
model.component('comp1').geom('geom1').feature('sel3').label('skin-inside-boundary');
model.component('comp1').geom('geom1').feature('sel3').selection('selection').init(2);
model.component('comp1').geom('geom1').feature('sel3').selection('selection').set('parf1(1)', [4 5 8 9 11 13 15 16]);
model.component('comp1').geom('geom1').feature('sel3').set('groupcontang', true);
model.component('comp1').geom('geom1').create('sel4', 'ExplicitSelection');
model.component('comp1').geom('geom1').feature('sel4').label('skin-outside-contact');
model.component('comp1').geom('geom1').feature('sel4').selection('selection').init(2);
model.component('comp1').geom('geom1').feature('sel4').selection('selection').set('parf1(1)', [6 7 12 14]);
model.component('comp1').geom('geom1').create('elp3', 'Ellipsoid');
model.component('comp1').geom('geom1').feature('elp3').label('Ellipsoid 1');
model.component('comp1').geom('geom1').feature('elp3').set('semiaxes', [12.437 8.153 8.153]);
model.component('comp1').geom('geom1').create('blk3', 'Block');
model.component('comp1').geom('geom1').feature('blk3').label('Block 2');
model.component('comp1').geom('geom1').feature('blk3').set('pos', [-13 -9 0]);
model.component('comp1').geom('geom1').feature('blk3').set('size', [26 18 9]);
model.component('comp1').geom('geom1').create('dif4', 'Difference');
model.component('comp1').geom('geom1').feature('dif4').label('Difference 2');
model.component('comp1').geom('geom1').feature('dif4').selection('input').set({'elp3'});
model.component('comp1').geom('geom1').feature('dif4').selection('input2').set({'blk3'});
model.component('comp1').geom('geom1').create('wp1', 'WorkPlane');
model.component('comp1').geom('geom1').feature('wp1').set('planetype', 'transformed');
model.component('comp1').geom('geom1').feature('wp1').set('transdispl', {'-.4033' '0' '-8.14'});
model.component('comp1').geom('geom1').feature('wp1').set('transaxis', [0 1 0]);
model.component('comp1').geom('geom1').feature('wp1').set('transrot', -14);
model.component('comp1').geom('geom1').feature('wp1').set('unite', true);
model.component('comp1').geom('geom1').create('blk4', 'Block');
model.component('comp1').geom('geom1').feature('blk4').label('Block 3');
model.component('comp1').geom('geom1').feature('blk4').set('workplane', 'wp1');
model.component('comp1').geom('geom1').feature('blk4').set('pos', [-3 -9 -1]);
model.component('comp1').geom('geom1').feature('blk4').set('size', [16 18 1]);
model.component('comp1').geom('geom1').create('dif5', 'Difference');
model.component('comp1').geom('geom1').feature('dif5').label('core');
model.component('comp1').geom('geom1').feature('dif5').selection('input').set({'dif4'});
model.component('comp1').geom('geom1').feature('dif5').selection('input2').set({'blk4'});
model.component('comp1').geom('geom1').create('del6', 'Delete');
model.component('comp1').geom('geom1').feature('del6').selection('input').init;
model.component('comp1').geom('geom1').feature('del6').selection('input').set({'dif2'});
model.component('comp1').geom('geom1').create('csur1', 'ConvertToSurface');
model.component('comp1').geom('geom1').feature('csur1').selection('input').set({'dif5'});
model.component('comp1').geom('geom1').create('spl1', 'Split');
model.component('comp1').geom('geom1').feature('spl1').selection('input').set({'csur1'});
model.component('comp1').geom('geom1').create('del7', 'Delete');
model.component('comp1').geom('geom1').feature('del7').selection('input').init;
model.component('comp1').geom('geom1').feature('del7').selection('input').set({'spl1(3)'});
model.component('comp1').geom('geom1').create('ps1', 'ParametricSurface');
model.component('comp1').geom('geom1').feature('ps1').label('indenter');
model.component('comp1').geom('geom1').feature('ps1').set('selresult', true);
model.component('comp1').geom('geom1').feature('ps1').set('pos', {'ix' 'iy' 'iz'});
model.component('comp1').geom('geom1').feature('ps1').set('rot', 'irot');
model.component('comp1').geom('geom1').feature('ps1').set('axis', {'itheta' 'iphi'});
model.component('comp1').geom('geom1').feature('ps1').set('parmin1', '-iw/2');
model.component('comp1').geom('geom1').feature('ps1').set('parmax1', 'iw/2');
model.component('comp1').geom('geom1').feature('ps1').set('parmin2', '-il/2');
model.component('comp1').geom('geom1').feature('ps1').set('parmax2', 'il/2');
model.component('comp1').geom('geom1').feature('ps1').set('coord', {'s1' 's2' '0'});
model.component('comp1').geom('geom1').feature('fin').label('Form Assembly');
model.component('comp1').geom('geom1').feature('fin').set('action', 'assembly');
model.component('comp1').geom('geom1').feature('fin').set('createpairs', false);
model.component('comp1').geom('geom1').feature('fin').set('repairtoltype', 'relative');
model.component('comp1').geom('geom1').run;
model.component('comp1').geom('geom1').run('fin');

model.component('comp1').selection.create('sel3', 'Explicit');
model.component('comp1').selection('sel3').set([1]);
model.component('comp1').selection('sel3').label('skin_domain');

model.component('comp1').variable.create('var1');
model.component('comp1').variable('var1').set('EnclosedVolume', 'VolInt(-x*solid.nx)', 'Enclosed Vloume');
model.component('comp1').variable('var1').set('fn', 'solid.cnt1.int(solid.Tn)+eps', 'normal force (contact)');
model.component('comp1').variable('var1').set('pc', 'fn/(solid.cnt1.int(solid.Tn>0)+eps)', 'contact pressure');
model.component('comp1').variable('var1').set('nx0', 'solid.cnt1.int(x*solid.Tn)/fn', '(x) of point of applied force (normal to skin)');
model.component('comp1').variable('var1').set('ny0', 'solid.cnt1.int(y*solid.Tn)/fn');
model.component('comp1').variable('var1').set('nz0', 'solid.cnt1.int(z*solid.Tn)/fn');
model.component('comp1').variable('var1').set('nx', 'solid.Tn_totx/fn', 'Tn(x)');
model.component('comp1').variable('var1').set('ny', 'solid.Tn_toty/fn', 'Tn(y)');
model.component('comp1').variable('var1').set('nz', 'solid.Tn_totz/fn', 'Tn(z)');
model.component('comp1').variable.create('var2');
model.component('comp1').variable('var2').set('ftnorm', 'solid.cnt1.int(solid.Ttnorm)+eps', 'friction force (sum of norm)');
model.component('comp1').variable('var2').set('tx0', 'solid.cnt1.int(x*solid.Ttnorm)/ftnorm', '(x) of point of applied force (normal to skin)');
model.component('comp1').variable('var2').set('ty0', 'solid.cnt1.int(y*solid.Ttnorm)/ftnorm');
model.component('comp1').variable('var2').set('tz0', 'solid.cnt1.int(z*solid.Ttnorm)/ftnorm');
model.component('comp1').variable('var2').set('ft', 'sqrt(solid.cnt1.int(solid.Ttx)^2+solid.cnt1.int(solid.Tty)^2+solid.cnt1.int(solid.Ttz)^2)+eps', 'shear force (norm of x, y, z sums)');
model.component('comp1').variable('var2').set('tx', 'solid.cnt1.int(solid.Ttx)/ft', 'Tt(x)');
model.component('comp1').variable('var2').set('ty', 'solid.cnt1.int(solid.Tty)/ft', 'Tt(y)');
model.component('comp1').variable('var2').set('tz', 'solid.cnt1.int(solid.Ttz)/ft', 'Tt(z)');

model.component('comp1').view('view3').tag('view31');
model.component('comp1').view('view2').tag('view3');
model.component('comp1').view('view31').tag('view2');
model.view.create('view4', 3);

model.component('comp1').pair.create('p1', 'Contact');
model.component('comp1').pair('p1').source.named('geom1_ps1_bnd');
model.component('comp1').pair('p1').destination.named('geom1_sel4');

model.component('comp1').material.create('mat1', 'Common');
model.component('comp1').material('mat1').selection.named('geom1_dif3_dom');
model.component('comp1').material('mat1').propertyGroup.create('MooneyRivlin', 'Mooney-Rivlin');

model.component('comp1').cpl.create('intop1', 'Integration');
model.component('comp1').cpl.create('intop2', 'Integration');
model.component('comp1').cpl('intop1').selection.named('geom1_sel3');
model.component('comp1').cpl('intop2').selection.named('geom1_sel4');

model.component('comp1').common.create('pres1', 'PrescribedDeformation');
model.component('comp1').common('pres1').selection.named('geom1_ps1_bnd');

model.component('comp1').physics.create('solid', 'SolidMechanics', 'geom1');
model.component('comp1').physics('solid').field('displacement').field('u_solid');
model.component('comp1').physics('solid').field('displacement').component({'u_solid' 'v_solid' 'w_solid'});
model.component('comp1').physics('solid').create('hmm1', 'HyperelasticModel', 3);
model.component('comp1').physics('solid').feature('hmm1').selection.set([1]);
model.component('comp1').physics('solid').create('fix1', 'Fixed', 2);
model.component('comp1').physics('solid').feature('fix1').selection.set([3]);
model.component('comp1').physics('solid').create('cnt1', 'SolidContact', 2);
model.component('comp1').physics('solid').feature('cnt1').create('fric1', 'Friction', 2);
model.component('comp1').physics('solid').create('bndl1', 'BoundaryLoad', 2);
model.component('comp1').physics('solid').feature('bndl1').selection.named('geom1_sel3');
model.component('comp1').physics('solid').create('ge1', 'GlobalEquations', -1);

model.component('comp1').mesh('mesh2').create('ftri1', 'FreeTri');
model.component('comp1').mesh('mesh2').create('ftet1', 'FreeTet');
model.component('comp1').mesh('mesh2').create('ftet2', 'FreeTet');
model.component('comp1').mesh('mesh2').feature('ftri1').selection.set([1 2 4 5 10 11 16 17]);
model.component('comp1').mesh('mesh2').feature('ftri1').create('size1', 'Size');
model.component('comp1').mesh('mesh2').feature('ftet1').selection.geom('geom1', 3);
model.component('comp1').mesh('mesh2').feature('ftet1').selection.set([1]);
model.component('comp1').mesh('mesh2').feature('ftet2').create('size1', 'Size');
model.component('comp1').mesh('mesh3').create('ftri1', 'FreeTri');
model.component('comp1').mesh('mesh3').create('ftet1', 'FreeTet');
model.component('comp1').mesh('mesh3').create('ftet2', 'FreeTet');
model.component('comp1').mesh('mesh3').feature('ftri1').selection.set([1 2 4 5 10 11 16 17]);
model.component('comp1').mesh('mesh3').feature('ftri1').create('size1', 'Size');
model.component('comp1').mesh('mesh3').feature('ftet1').selection.geom('geom1', 3);
model.component('comp1').mesh('mesh3').feature('ftet1').selection.set([1]);
model.component('comp1').mesh('mesh3').feature('ftet2').create('size1', 'Size');
model.component('comp1').mesh('mesh4').create('ftri1', 'FreeTri');
model.component('comp1').mesh('mesh4').create('ftet1', 'FreeTet');
model.component('comp1').mesh('mesh4').create('ftet2', 'FreeTet');
model.component('comp1').mesh('mesh4').feature('ftri1').selection.set([1 2 4 5 10 11 16 17]);
model.component('comp1').mesh('mesh4').feature('ftri1').create('size1', 'Size');
model.component('comp1').mesh('mesh4').feature('ftet1').selection.geom('geom1', 3);
model.component('comp1').mesh('mesh4').feature('ftet1').selection.set([1]);
model.component('comp1').mesh('mesh4').feature('ftet2').create('size1', 'Size');

model.component('comp1').probe.create('pbnd13', 'BoundaryPoint');
model.component('comp1').probe.create('pbnd14', 'BoundaryPoint');
model.component('comp1').probe.create('pbnd15', 'BoundaryPoint');
model.component('comp1').probe.create('pbnd16', 'BoundaryPoint');
model.component('comp1').probe.create('pbnd1', 'BoundaryPoint');
model.component('comp1').probe.create('pbnd2', 'BoundaryPoint');
model.component('comp1').probe.create('pbnd3', 'BoundaryPoint');
model.component('comp1').probe.create('pbnd4', 'BoundaryPoint');
model.component('comp1').probe.create('pbnd5', 'BoundaryPoint');
model.component('comp1').probe.create('pbnd6', 'BoundaryPoint');
model.component('comp1').probe.create('pbnd7', 'BoundaryPoint');
model.component('comp1').probe.create('pbnd8', 'BoundaryPoint');
model.component('comp1').probe.create('pbnd9', 'BoundaryPoint');
model.component('comp1').probe.create('pbnd10', 'BoundaryPoint');
model.component('comp1').probe.create('pbnd11', 'BoundaryPoint');
model.component('comp1').probe.create('pbnd12', 'BoundaryPoint');
model.component('comp1').probe.create('var6', 'GlobalVariable');
model.component('comp1').probe.create('var4', 'GlobalVariable');
model.component('comp1').probe.create('var7', 'GlobalVariable');
model.component('comp1').probe.create('var8', 'GlobalVariable');
model.component('comp1').probe.create('var9', 'GlobalVariable');
model.component('comp1').probe.create('var10', 'GlobalVariable');
model.component('comp1').probe.create('var11', 'GlobalVariable');
model.component('comp1').probe.create('var12', 'GlobalVariable');
model.component('comp1').probe.create('var22', 'GlobalVariable');
model.component('comp1').probe.create('var14', 'GlobalVariable');
model.component('comp1').probe.create('var21', 'GlobalVariable');
model.component('comp1').probe.create('var15', 'GlobalVariable');
model.component('comp1').probe.create('var16', 'GlobalVariable');
model.component('comp1').probe.create('var17', 'GlobalVariable');
model.component('comp1').probe.create('var18', 'GlobalVariable');
model.component('comp1').probe.create('var19', 'GlobalVariable');
model.component('comp1').probe.create('var20', 'GlobalVariable');
model.component('comp1').probe.create('bnd1', 'Boundary');
model.component('comp1').probe('pbnd13').create('ppb13', 'PointExpr');
model.component('comp1').probe('pbnd13').feature.remove('ppb1');
model.component('comp1').probe('pbnd14').create('ppb14', 'PointExpr');
model.component('comp1').probe('pbnd14').feature.remove('ppb2');
model.component('comp1').probe('pbnd15').create('ppb15', 'PointExpr');
model.component('comp1').probe('pbnd15').feature.remove('ppb3');
model.component('comp1').probe('pbnd16').create('ppb16', 'PointExpr');
model.component('comp1').probe('pbnd16').feature.remove('ppb4');
model.component('comp1').probe('pbnd1').create('ppb1', 'PointExpr');
model.component('comp1').probe('pbnd1').feature.remove('ppb5');
model.component('comp1').probe('pbnd2').create('ppb2', 'PointExpr');
model.component('comp1').probe('pbnd2').feature.remove('ppb6');
model.component('comp1').probe('pbnd3').create('ppb3', 'PointExpr');
model.component('comp1').probe('pbnd3').feature.remove('ppb7');
model.component('comp1').probe('pbnd4').create('ppb4', 'PointExpr');
model.component('comp1').probe('pbnd4').feature.remove('ppb8');
model.component('comp1').probe('pbnd5').create('ppb5', 'PointExpr');
model.component('comp1').probe('pbnd5').feature.remove('ppb9');
model.component('comp1').probe('pbnd6').create('ppb6', 'PointExpr');
model.component('comp1').probe('pbnd6').feature.remove('ppb10');
model.component('comp1').probe('pbnd7').create('ppb7', 'PointExpr');
model.component('comp1').probe('pbnd7').feature.remove('ppb11');
model.component('comp1').probe('pbnd8').create('ppb8', 'PointExpr');
model.component('comp1').probe('pbnd8').feature.remove('ppb12');
model.component('comp1').probe('pbnd9').create('ppb9', 'PointExpr');
model.component('comp1').probe('pbnd9').feature.remove('ppb13');
model.component('comp1').probe('pbnd10').create('ppb10', 'PointExpr');
model.component('comp1').probe('pbnd10').feature.remove('ppb14');
model.component('comp1').probe('pbnd11').create('ppb11', 'PointExpr');
model.component('comp1').probe('pbnd11').feature.remove('ppb15');
model.component('comp1').probe('pbnd12').create('ppb12', 'PointExpr');
model.component('comp1').probe('pbnd12').feature.remove('ppb16');
model.component('comp1').probe('bnd1').selection.named('geom1_sel4');

model.result.table('tbl1').label('Probe Table 1');
model.result.table('mm1').label('Maximum and minimum values');
model.result.table('mm1').comments('Max/min line');

model.component('comp1').variable('var1').label('Variables normal');
model.component('comp1').variable('var2').label('Variables shear');

model.component('comp1').view('view1').set('scenelight', false);
model.component('comp1').view('view1').set('transparency', true);
model.component('comp1').view('view2').label('View 2.1');
model.component('comp1').view('view2').axis.set('xmin', -6.882194519042969);
model.component('comp1').view('view2').axis.set('xmax', 15.171869277954102);
model.component('comp1').view('view2').axis.set('ymin', -6.995667934417725);
model.component('comp1').view('view2').axis.set('ymax', 7.0717387199401855);
model.component('comp1').view('view3').label('View 3');
model.component('comp1').view('view3').axis.set('xmin', -11.261818885803223);
model.component('comp1').view('view3').axis.set('xmax', 11.261818885803223);
model.component('comp1').view('view3').axis.set('ymin', -6.489403247833252);
model.component('comp1').view('view3').axis.set('ymax', 6.489403247833252);

model.component('comp1').pair('p1').pairName('lower');

model.component('comp1').material('mat1').label('Silicone Rubber');
model.component('comp1').material('mat1').set('family', 'custom');
model.component('comp1').material('mat1').set('specular', 'custom');
model.component('comp1').material('mat1').set('customspecular', [0.7843137254901961 1 1]);
model.component('comp1').material('mat1').set('diffuse', 'custom');
model.component('comp1').material('mat1').set('customdiffuse', [0.6666666666666666 0.6666666666666666 0.7058823529411765]);
model.component('comp1').material('mat1').set('ambient', 'custom');
model.component('comp1').material('mat1').set('customambient', [0.6666666666666666 0.6666666666666666 0.7058823529411765]);
model.component('comp1').material('mat1').set('noise', true);
model.component('comp1').material('mat1').set('noisefreq', 1);
model.component('comp1').material('mat1').set('lighting', 'cooktorrance');
model.component('comp1').material('mat1').set('fresnel', 0.7);
model.component('comp1').material('mat1').set('roughness', 0.5);
model.component('comp1').material('mat1').propertyGroup('def').set('relpermeability_symmetry', '3');
model.component('comp1').material('mat1').propertyGroup('def').descr('relpermeability_symmetry', '');
model.component('comp1').material('mat1').propertyGroup('def').set('electricconductivity_symmetry', '3');
model.component('comp1').material('mat1').propertyGroup('def').descr('electricconductivity_symmetry', '');
model.component('comp1').material('mat1').propertyGroup('def').set('thermalexpansioncoefficient_symmetry', '3');
model.component('comp1').material('mat1').propertyGroup('def').descr('thermalexpansioncoefficient_symmetry', '');
model.component('comp1').material('mat1').propertyGroup('def').set('heatcapacity_symmetry', '0');
model.component('comp1').material('mat1').propertyGroup('def').descr('heatcapacity_symmetry', '');
model.component('comp1').material('mat1').propertyGroup('def').set('relpermittivity_symmetry', '3');
model.component('comp1').material('mat1').propertyGroup('def').descr('relpermittivity_symmetry', '');
model.component('comp1').material('mat1').propertyGroup('def').set('density', '1100[kg/m^3]');
model.component('comp1').material('mat1').propertyGroup('def').descr('density_symmetry', '');
model.component('comp1').material('mat1').propertyGroup('def').set('thermalconductivity_symmetry', '3');
model.component('comp1').material('mat1').propertyGroup('def').descr('thermalconductivity_symmetry', '');
model.component('comp1').material('mat1').propertyGroup('MooneyRivlin').set('C10', '');
model.component('comp1').material('mat1').propertyGroup('MooneyRivlin').set('C01', '');
model.component('comp1').material('mat1').propertyGroup('MooneyRivlin').set('C11', '');
model.component('comp1').material('mat1').propertyGroup('MooneyRivlin').set('C20', '');
model.component('comp1').material('mat1').propertyGroup('MooneyRivlin').set('C02', '');
model.component('comp1').material('mat1').propertyGroup('MooneyRivlin').set('C21', '');
model.component('comp1').material('mat1').propertyGroup('MooneyRivlin').set('C12', '');
model.component('comp1').material('mat1').propertyGroup('MooneyRivlin').set('C30', '');
model.component('comp1').material('mat1').propertyGroup('MooneyRivlin').set('C03', '');
model.component('comp1').material('mat1').propertyGroup('MooneyRivlin').set('C10', 'c10[MPa]');
model.component('comp1').material('mat1').propertyGroup('MooneyRivlin').set('C01', 'c01[MPa]');

model.component('comp1').cpl('intop1').set('opname', 'VolInt');
model.component('comp1').cpl('intop2').set('opname', 'SurfInt');

model.component('comp1').common('pres1').set('prescribedDeformation', {'idx[mm]' 'idy[mm]' 'idz[mm]'});

model.component('comp1').physics('solid').prop('ShapeProperty').set('order_displacement', 2);
model.component('comp1').physics('solid').feature('hmm1').set('MaterialModel', 'MooneyRivlin');
model.component('comp1').physics('solid').feature('hmm1').set('kappa', '1.5 [GPa]');
model.component('comp1').physics('solid').feature('cnt1').set('ContactMethodCtrl', 'AugmentedLagrange');
model.component('comp1').physics('solid').feature('cnt1').set('sourceMesh', true);
model.component('comp1').physics('solid').feature('cnt1').set('tolcontact', '0.03639875822057671*1e-4');
model.component('comp1').physics('solid').feature('cnt1').set('isContactLog', true);
model.component('comp1').physics('solid').feature('cnt1').set('pairs', 'p1');
model.component('comp1').physics('solid').feature('cnt1').feature('fric1').set('mu_fric', 'mu');
model.component('comp1').physics('solid').feature('cnt1').feature('fric1').set('cm_old_init', [0; 0; 0]);
model.component('comp1').physics('solid').feature('bndl1').set('LoadType', 'FollowerPressure');
model.component('comp1').physics('solid').feature('bndl1').set('FollowerPressure', 'Pressure');
model.component('comp1').physics('solid').feature('ge1').set('name', 'Pressure');
model.component('comp1').physics('solid').feature('ge1').set('equation', 'EnclosedVolume-3.0524E-6');
model.component('comp1').physics('solid').feature('ge1').set('valueType', 'real');

model.component('comp1').mesh('mesh2').label('Mesh fine');
model.component('comp1').mesh('mesh2').feature('size').set('hauto', 4);
model.component('comp1').mesh('mesh2').feature('ftri1').feature('size1').set('hauto', 3);
model.component('comp1').mesh('mesh2').feature('ftet1').set('optcurved', true);
model.component('comp1').mesh('mesh2').feature('ftet2').feature('size1').set('hauto', 2);
model.component('comp1').mesh('mesh2').run;
model.component('comp1').mesh('mesh3').label('Mesh normal');
model.component('comp1').mesh('mesh3').feature('ftri1').feature('size1').set('hauto', 4);
model.component('comp1').mesh('mesh3').feature('ftet1').set('optcurved', true);
model.component('comp1').mesh('mesh3').feature('ftet2').feature('size1').set('hauto', 3);
model.component('comp1').mesh('mesh3').run;
model.component('comp1').mesh('mesh4').label('Mesh finer');
model.component('comp1').mesh('mesh4').feature('size').set('hauto', 3);
model.component('comp1').mesh('mesh4').feature('ftri1').feature('size1').set('hauto', 2);
model.component('comp1').mesh('mesh4').feature('ftet1').set('optcurved', true);
model.component('comp1').mesh('mesh4').feature('ftet2').feature('size1').set('hauto', 1);
model.component('comp1').mesh('mesh4').run;

model.component('comp1').probe('pbnd13').active(false);
model.component('comp1').probe('pbnd13').label('BP 13');
model.component('comp1').probe('pbnd13').set('rawcoords', [6.57 0 -6.41]);
model.component('comp1').probe('pbnd13').set('snapcoords', {'6.5680' '0.0000' '-6.4019'});
model.component('comp1').probe('pbnd13').feature('ppb13').label('P');
model.component('comp1').probe('pbnd13').feature('ppb13').set('probename', 'ppb13');
model.component('comp1').probe('pbnd13').feature('ppb13').set('expr', 'root.nx');
model.component('comp1').probe('pbnd13').feature('ppb13').set('unit', '');
model.component('comp1').probe('pbnd13').feature('ppb13').set('descr', 'Normal, x component');
model.component('comp1').probe('pbnd13').feature('ppb13').set('window', 'window1');
model.component('comp1').probe('pbnd14').active(false);
model.component('comp1').probe('pbnd14').label('BP 14');
model.component('comp1').probe('pbnd14').set('rawcoords', [4.32 -1.85 -6.97]);
model.component('comp1').probe('pbnd14').set('snapcoords', {'4.3182' '-1.8500' '-6.9628'});
model.component('comp1').probe('pbnd14').feature('ppb14').label('P');
model.component('comp1').probe('pbnd14').feature('ppb14').set('probename', 'ppb14');
model.component('comp1').probe('pbnd14').feature('ppb14').set('expr', 'p');
model.component('comp1').probe('pbnd14').feature('ppb14').set('unit', 'Pa');
model.component('comp1').probe('pbnd14').feature('ppb14').set('descr', 'Pressure');
model.component('comp1').probe('pbnd14').feature('ppb14').set('window', 'window1');
model.component('comp1').probe('pbnd15').active(false);
model.component('comp1').probe('pbnd15').label('BP 15');
model.component('comp1').probe('pbnd15').set('rawcoords', [4.32 1.85 -6.97]);
model.component('comp1').probe('pbnd15').set('snapcoords', {'4.3182' '1.8500' '-6.9628'});
model.component('comp1').probe('pbnd15').feature('ppb15').label('P');
model.component('comp1').probe('pbnd15').feature('ppb15').set('probename', 'ppb15');
model.component('comp1').probe('pbnd15').feature('ppb15').set('expr', 'p');
model.component('comp1').probe('pbnd15').feature('ppb15').set('unit', 'Pa');
model.component('comp1').probe('pbnd15').feature('ppb15').set('descr', 'Pressure');
model.component('comp1').probe('pbnd15').feature('ppb15').set('window', 'window1');
model.component('comp1').probe('pbnd16').active(false);
model.component('comp1').probe('pbnd16').label('BP 16');
model.component('comp1').probe('pbnd16').set('rawcoords', [1.91 0 -7.57]);
model.component('comp1').probe('pbnd16').set('snapcoords', {'1.9084' '0.0000' '-7.5636'});
model.component('comp1').probe('pbnd16').feature('ppb16').label('P');
model.component('comp1').probe('pbnd16').feature('ppb16').set('probename', 'ppb16');
model.component('comp1').probe('pbnd16').feature('ppb16').set('expr', 'p');
model.component('comp1').probe('pbnd16').feature('ppb16').set('unit', 'Pa');
model.component('comp1').probe('pbnd16').feature('ppb16').set('descr', 'Pressure');
model.component('comp1').probe('pbnd16').feature('ppb16').set('window', 'window1');
model.component('comp1').probe('pbnd1').active(false);
model.component('comp1').probe('pbnd1').label('BP 1');
model.component('comp1').probe('pbnd1').set('rawcoords', [9.81 -3.98 -2.77]);
model.component('comp1').probe('pbnd1').set('snapcoords', {'9.8651' '-4.0371' '-2.8054'});
model.component('comp1').probe('pbnd1').feature('ppb1').label('P');
model.component('comp1').probe('pbnd1').feature('ppb1').set('expr', 'p');
model.component('comp1').probe('pbnd1').feature('ppb1').set('unit', 'Pa');
model.component('comp1').probe('pbnd1').feature('ppb1').set('descr', 'Pressure');
model.component('comp1').probe('pbnd1').feature('ppb1').set('window', 'window1');
model.component('comp1').probe('pbnd2').active(false);
model.component('comp1').probe('pbnd2').label('BP 2');
model.component('comp1').probe('pbnd2').set('rawcoords', {'8.10' '-3.07' '-5.21'});
model.component('comp1').probe('pbnd2').set('snapcoords', {'8.1305' '-3.1038' '-5.2581'});
model.component('comp1').probe('pbnd2').feature('ppb2').label('P');
model.component('comp1').probe('pbnd2').feature('ppb2').set('expr', 'p');
model.component('comp1').probe('pbnd2').feature('ppb2').set('unit', 'Pa');
model.component('comp1').probe('pbnd2').feature('ppb2').set('descr', 'Pressure');
model.component('comp1').probe('pbnd2').feature('ppb2').set('window', 'window1');
model.component('comp1').probe('pbnd3').active(false);
model.component('comp1').probe('pbnd3').label('BP 3');
model.component('comp1').probe('pbnd3').set('rawcoords', {'6.10' '-5.49' '-4.28'});
model.component('comp1').probe('pbnd3').set('snapcoords', {'6.1318' '-5.5598' '-4.3345'});
model.component('comp1').probe('pbnd3').feature('ppb3').label('P');
model.component('comp1').probe('pbnd3').feature('ppb3').set('expr', 'p');
model.component('comp1').probe('pbnd3').feature('ppb3').set('unit', 'Pa');
model.component('comp1').probe('pbnd3').feature('ppb3').set('descr', 'Pressure');
model.component('comp1').probe('pbnd3').feature('ppb3').set('window', 'window1');
model.component('comp1').probe('pbnd4').active(false);
model.component('comp1').probe('pbnd4').label('BP 4');
model.component('comp1').probe('pbnd4').set('rawcoords', [2.13 -5.12 -5.99]);
model.component('comp1').probe('pbnd4').set('snapcoords', {'2.1445' '-5.1926' '-6.0898'});
model.component('comp1').probe('pbnd4').feature('ppb4').label('P');
model.component('comp1').probe('pbnd4').feature('ppb4').set('expr', 'p');
model.component('comp1').probe('pbnd4').feature('ppb4').set('unit', 'Pa');
model.component('comp1').probe('pbnd4').feature('ppb4').set('descr', 'Pressure');
model.component('comp1').probe('pbnd4').feature('ppb4').set('window', 'window1');
model.component('comp1').probe('pbnd5').active(false);
model.component('comp1').probe('pbnd5').label('BP 5');
model.component('comp1').probe('pbnd5').set('rawcoords', [2.22 -7.16 -3.26]);
model.component('comp1').probe('pbnd5').set('snapcoords', {'2.2294' '-7.2648' '-3.3207'});
model.component('comp1').probe('pbnd5').feature('ppb5').label('P');
model.component('comp1').probe('pbnd5').feature('ppb5').set('expr', 'p');
model.component('comp1').probe('pbnd5').feature('ppb5').set('unit', 'Pa');
model.component('comp1').probe('pbnd5').feature('ppb5').set('descr', 'Pressure');
model.component('comp1').probe('pbnd5').feature('ppb5').set('window', 'window1');
model.component('comp1').probe('pbnd6').active(false);
model.component('comp1').probe('pbnd6').label('BP 6');
model.component('comp1').probe('pbnd6').set('rawcoords', [-0.4 -2.41 -7.62]);
model.component('comp1').probe('pbnd6').set('snapcoords', {'-0.39975' '-2.4629' '-7.7539'});
model.component('comp1').probe('pbnd6').feature('ppb6').label('P');
model.component('comp1').probe('pbnd6').feature('ppb6').set('expr', 'p');
model.component('comp1').probe('pbnd6').feature('ppb6').set('unit', 'Pa');
model.component('comp1').probe('pbnd6').feature('ppb6').set('descr', 'Pressure');
model.component('comp1').probe('pbnd6').feature('ppb6').set('window', 'window1');
model.component('comp1').probe('pbnd7').active(false);
model.component('comp1').probe('pbnd7').label('BP 7');
model.component('comp1').probe('pbnd7').set('rawcoords', [-2.33 -7.24 -3.06]);
model.component('comp1').probe('pbnd7').set('snapcoords', {'-2.3454' '-7.3447' '-3.1024'});
model.component('comp1').probe('pbnd7').feature('ppb7').label('P');
model.component('comp1').probe('pbnd7').feature('ppb7').set('expr', 'p');
model.component('comp1').probe('pbnd7').feature('ppb7').set('unit', 'Pa');
model.component('comp1').probe('pbnd7').feature('ppb7').set('descr', 'Pressure');
model.component('comp1').probe('pbnd7').feature('ppb7').set('window', 'window1');
model.component('comp1').probe('pbnd8').active(false);
model.component('comp1').probe('pbnd8').label('BP 8');
model.component('comp1').probe('pbnd8').set('rawcoords', [-3.47 -4.75 -6.03]);
model.component('comp1').probe('pbnd8').set('snapcoords', {'-3.4911' '-4.8110' '-6.1226'});
model.component('comp1').probe('pbnd8').feature('ppb8').label('P');
model.component('comp1').probe('pbnd8').feature('ppb8').set('expr', 'p');
model.component('comp1').probe('pbnd8').feature('ppb8').set('unit', 'Pa');
model.component('comp1').probe('pbnd8').feature('ppb8').set('descr', 'Pressure');
model.component('comp1').probe('pbnd8').feature('ppb8').set('window', 'window1');
model.component('comp1').probe('pbnd9').active(false);
model.component('comp1').probe('pbnd9').label('BP 9');
model.component('comp1').probe('pbnd9').set('rawcoords', [-5.68 -1.82 -6.88]);
model.component('comp1').probe('pbnd9').set('snapcoords', {'-5.7087' '-1.8418' '-6.9562'});
model.component('comp1').probe('pbnd9').feature('ppb9').label('P');
model.component('comp1').probe('pbnd9').feature('ppb9').set('expr', 'p');
model.component('comp1').probe('pbnd9').feature('ppb9').set('unit', 'Pa');
model.component('comp1').probe('pbnd9').feature('ppb9').set('descr', 'Pressure');
model.component('comp1').probe('pbnd9').feature('ppb9').set('window', 'window1');
model.component('comp1').probe('pbnd10').active(false);
model.component('comp1').probe('pbnd10').label('BP 10');
model.component('comp1').probe('pbnd10').set('rawcoords', [-6.19 -5.77 -3.83]);
model.component('comp1').probe('pbnd10').set('snapcoords', {'-6.2228' '-5.8458' '-3.8811'});
model.component('comp1').probe('pbnd10').feature('ppb10').label('P');
model.component('comp1').probe('pbnd10').feature('ppb10').set('expr', 'p');
model.component('comp1').probe('pbnd10').feature('ppb10').set('unit', 'Pa');
model.component('comp1').probe('pbnd10').feature('ppb10').set('descr', 'Pressure');
model.component('comp1').probe('pbnd10').feature('ppb10').set('window', 'window1');
model.component('comp1').probe('pbnd11').active(false);
model.component('comp1').probe('pbnd11').label('BP 11');
model.component('comp1').probe('pbnd11').set('rawcoords', [-8.15 -3.25 -5.07]);
model.component('comp1').probe('pbnd11').set('snapcoords', {'-8.1981' '-3.2907' '-5.1471'});
model.component('comp1').probe('pbnd11').feature('ppb11').label('P');
model.component('comp1').probe('pbnd11').feature('ppb11').set('expr', 'p');
model.component('comp1').probe('pbnd11').feature('ppb11').set('unit', 'Pa');
model.component('comp1').probe('pbnd11').feature('ppb11').set('descr', 'Pressure');
model.component('comp1').probe('pbnd11').feature('ppb11').set('window', 'window1');
model.component('comp1').probe('pbnd12').active(false);
model.component('comp1').probe('pbnd12').label('BP 12');
model.component('comp1').probe('pbnd12').set('rawcoords', [-10.1 -3.85 -2.54]);
model.component('comp1').probe('pbnd12').set('snapcoords', {'-10.162' '-3.9002' '-2.5820'});
model.component('comp1').probe('pbnd12').feature('ppb12').label('P');
model.component('comp1').probe('pbnd12').feature('ppb12').set('expr', 'p');
model.component('comp1').probe('pbnd12').feature('ppb12').set('unit', 'Pa');
model.component('comp1').probe('pbnd12').feature('ppb12').set('descr', 'Pressure');
model.component('comp1').probe('pbnd12').feature('ppb12').set('window', 'window1');
model.component('comp1').probe('var6').label('Pressure Probe');
model.component('comp1').probe('var6').set('probename', 'pressureProbe');
model.component('comp1').probe('var6').set('expr', 'Pressure');
model.component('comp1').probe('var6').set('unit', 'Pa');
model.component('comp1').probe('var6').set('descractive', true);
model.component('comp1').probe('var6').set('descr', 'Pressure');
model.component('comp1').probe('var6').set('table', 'tbl1');
model.component('comp1').probe('var6').set('window', 'window3');
model.component('comp1').probe('var4').label('contact pressure Probe');
model.component('comp1').probe('var4').set('expr', 'pc');
model.component('comp1').probe('var4').set('unit', 'N/m^2');
model.component('comp1').probe('var4').set('descractive', true);
model.component('comp1').probe('var4').set('descr', 'Contact P');
model.component('comp1').probe('var4').set('table', 'tbl1');
model.component('comp1').probe('var4').set('window', 'window2');
model.component('comp1').probe('var7').label('nx0');
model.component('comp1').probe('var7').set('expr', 'nx0');
model.component('comp1').probe('var7').set('unit', 'mm');
model.component('comp1').probe('var7').set('descractive', true);
model.component('comp1').probe('var7').set('descr', 'nx0');
model.component('comp1').probe('var7').set('table', 'tbl1');
model.component('comp1').probe('var7').set('window', 'window2');
model.component('comp1').probe('var8').label('ny0');
model.component('comp1').probe('var8').set('expr', 'ny0');
model.component('comp1').probe('var8').set('unit', 'mm');
model.component('comp1').probe('var8').set('descractive', true);
model.component('comp1').probe('var8').set('descr', 'ny0');
model.component('comp1').probe('var8').set('table', 'tbl1');
model.component('comp1').probe('var8').set('window', 'window4');
model.component('comp1').probe('var9').label('nz0');
model.component('comp1').probe('var9').set('expr', 'nz0');
model.component('comp1').probe('var9').set('unit', 'mm');
model.component('comp1').probe('var9').set('descractive', true);
model.component('comp1').probe('var9').set('descr', 'nz0');
model.component('comp1').probe('var9').set('table', 'tbl1');
model.component('comp1').probe('var9').set('window', 'window2');
model.component('comp1').probe('var10').label('nx');
model.component('comp1').probe('var10').set('expr', 'nx');
model.component('comp1').probe('var10').set('descr', 'Tn(x)');
model.component('comp1').probe('var10').set('table', 'tbl1');
model.component('comp1').probe('var10').set('window', 'window4');
model.component('comp1').probe('var11').label('ny');
model.component('comp1').probe('var11').set('expr', 'ny');
model.component('comp1').probe('var11').set('descr', 'Tn(y)');
model.component('comp1').probe('var11').set('table', 'tbl1');
model.component('comp1').probe('var11').set('window', 'window4');
model.component('comp1').probe('var12').label('nz');
model.component('comp1').probe('var12').set('expr', 'nz');
model.component('comp1').probe('var12').set('descr', 'Tn(z)');
model.component('comp1').probe('var12').set('table', 'tbl1');
model.component('comp1').probe('var12').set('window', 'window4');
model.component('comp1').probe('var22').set('expr', 'solid.cnt1.int(solid.Tn>0)*1e6');
model.component('comp1').probe('var22').set('unit', 'm^2');
model.component('comp1').probe('var22').set('descr', 'solid.cnt1.int(solid.Tn>0)*1e6');
model.component('comp1').probe('var22').set('table', 'tbl1');
model.component('comp1').probe('var22').set('window', 'window4');
model.component('comp1').probe('var14').label('ft');
model.component('comp1').probe('var14').set('expr', 'ft');
model.component('comp1').probe('var14').set('unit', 'N');
model.component('comp1').probe('var14').set('descr', 'shear force (contact)');
model.component('comp1').probe('var14').set('table', 'tbl1');
model.component('comp1').probe('var14').set('window', 'window2');
model.component('comp1').probe('var21').label('ftnorm');
model.component('comp1').probe('var21').set('expr', 'ftnorm');
model.component('comp1').probe('var21').set('unit', 'N');
model.component('comp1').probe('var21').set('descr', '');
model.component('comp1').probe('var21').set('table', 'tbl1');
model.component('comp1').probe('var21').set('window', 'window2');
model.component('comp1').probe('var15').label('tx0');
model.component('comp1').probe('var15').set('expr', 'tx0');
model.component('comp1').probe('var15').set('unit', 'mm');
model.component('comp1').probe('var15').set('descractive', true);
model.component('comp1').probe('var15').set('descr', 'tx0');
model.component('comp1').probe('var15').set('table', 'tbl1');
model.component('comp1').probe('var15').set('window', 'window2');
model.component('comp1').probe('var16').label('ty0');
model.component('comp1').probe('var16').set('expr', 'ty0');
model.component('comp1').probe('var16').set('unit', '');
model.component('comp1').probe('var16').set('descractive', true);
model.component('comp1').probe('var16').set('descr', 'ty0');
model.component('comp1').probe('var16').set('table', 'tbl1');
model.component('comp1').probe('var16').set('window', 'window4');
model.component('comp1').probe('var17').label('tz0');
model.component('comp1').probe('var17').set('expr', 'tz0');
model.component('comp1').probe('var17').set('unit', '');
model.component('comp1').probe('var17').set('descractive', true);
model.component('comp1').probe('var17').set('descr', 'tz0');
model.component('comp1').probe('var17').set('table', 'tbl1');
model.component('comp1').probe('var17').set('window', 'window2');
model.component('comp1').probe('var18').label('tx');
model.component('comp1').probe('var18').set('expr', 'tx');
model.component('comp1').probe('var18').set('descr', 'Tt(x)');
model.component('comp1').probe('var18').set('table', 'tbl1');
model.component('comp1').probe('var18').set('window', 'window4');
model.component('comp1').probe('var19').label('ty');
model.component('comp1').probe('var19').set('expr', 'ty');
model.component('comp1').probe('var19').set('descr', 'Tt(y)');
model.component('comp1').probe('var19').set('table', 'tbl1');
model.component('comp1').probe('var19').set('window', 'window4');
model.component('comp1').probe('var20').label('nz 1');
model.component('comp1').probe('var20').set('expr', 'tz');
model.component('comp1').probe('var20').set('descr', 'Tt(z)');
model.component('comp1').probe('var20').set('table', 'tbl1');
model.component('comp1').probe('var20').set('window', 'window4');
model.component('comp1').probe('bnd1').set('expr', 'solid.Tn');
model.component('comp1').probe('bnd1').set('unit', 'N/m^2');
model.component('comp1').probe('bnd1').set('descr', 'Contact pressure');
model.component('comp1').probe('bnd1').set('table', 'tbl1');
model.component('comp1').probe('bnd1').set('window', 'window4');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').attach('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').create('ls1', 'LumpedStep');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('s1').feature.remove('fcDef');

model.result.dataset.create('mesh2', 'Mesh');
model.result.dataset.create('dset2', 'Solution');
model.result.dataset.create('dset3', 'Solution');
model.result.dataset.create('avh1', 'Average');
model.result.dataset('dset2').set('probetag', 'var20');
model.result.dataset('dset3').set('probetag', 'bnd1');
model.result.dataset('avh1').set('probetag', 'bnd1');
model.result.dataset('avh1').set('data', 'dset3');
model.result.dataset('avh1').selection.geom('geom1', 2);
model.result.dataset('avh1').selection.set([6 7 12 14]);
model.result.numerical.create('gev2', 'EvalGlobal');
model.result.numerical.create('gev3', 'EvalGlobal');
model.result.numerical.create('gev4', 'EvalGlobal');
model.result.numerical.create('gev5', 'EvalGlobal');
model.result.numerical.create('gev6', 'EvalGlobal');
model.result.numerical.create('gev7', 'EvalGlobal');
model.result.numerical.create('gev8', 'EvalGlobal');
model.result.numerical.create('gev9', 'EvalGlobal');
model.result.numerical.create('gev10', 'EvalGlobal');
model.result.numerical.create('gev11', 'EvalGlobal');
model.result.numerical.create('gev12', 'EvalGlobal');
model.result.numerical.create('gev13', 'EvalGlobal');
model.result.numerical.create('gev14', 'EvalGlobal');
model.result.numerical.create('gev15', 'EvalGlobal');
model.result.numerical.create('gev16', 'EvalGlobal');
model.result.numerical.create('gev17', 'EvalGlobal');
model.result.numerical.create('pev1', 'EvalPoint');
model.result.numerical.create('gev18', 'EvalGlobal');
model.result.numerical('gev2').set('data', 'dset2');
model.result.numerical('gev2').set('probetag', 'var6');
model.result.numerical('gev3').set('data', 'dset2');
model.result.numerical('gev3').set('probetag', 'var4');
model.result.numerical('gev4').set('data', 'dset2');
model.result.numerical('gev4').set('probetag', 'var7');
model.result.numerical('gev5').set('data', 'dset2');
model.result.numerical('gev5').set('probetag', 'var8');
model.result.numerical('gev6').set('data', 'dset2');
model.result.numerical('gev6').set('probetag', 'var9');
model.result.numerical('gev7').set('data', 'dset2');
model.result.numerical('gev7').set('probetag', 'var10');
model.result.numerical('gev8').set('data', 'dset2');
model.result.numerical('gev8').set('probetag', 'var11');
model.result.numerical('gev9').set('data', 'dset2');
model.result.numerical('gev9').set('probetag', 'var12');
model.result.numerical('gev10').set('data', 'dset2');
model.result.numerical('gev10').set('probetag', 'var14');
model.result.numerical('gev11').set('data', 'dset2');
model.result.numerical('gev11').set('probetag', 'var15');
model.result.numerical('gev12').set('data', 'dset2');
model.result.numerical('gev12').set('probetag', 'var16');
model.result.numerical('gev13').set('data', 'dset2');
model.result.numerical('gev13').set('probetag', 'var17');
model.result.numerical('gev14').set('data', 'dset2');
model.result.numerical('gev14').set('probetag', 'var18');
model.result.numerical('gev15').set('data', 'dset2');
model.result.numerical('gev15').set('probetag', 'var19');
model.result.numerical('gev16').set('data', 'dset2');
model.result.numerical('gev16').set('probetag', 'var20');
model.result.numerical('gev17').set('data', 'dset2');
model.result.numerical('gev17').set('probetag', 'var21');
model.result.numerical('pev1').set('probetag', 'bnd1');
model.result.numerical('gev18').set('data', 'dset2');
model.result.numerical('gev18').set('probetag', 'var22');
model.result.create('pg1', 'PlotGroup3D');
model.result.create('pg2', 'PlotGroup3D');
model.result.create('pg3', 'PlotGroup3D');
model.result.create('pg4', 'PlotGroup1D');
model.result.create('pg5', 'PlotGroup1D');
model.result.create('pg6', 'PlotGroup3D');
model.result.create('pg7', 'PlotGroup1D');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', 'solid.mises');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg2').create('arws1', 'ArrowSurface');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('arws1').create('col', 'Color');
model.result('pg2').feature('arws1').create('def', 'Deform');
model.result('pg2').feature('arws1').feature('col').set('expr', 'comp1.solid.bndl1.F_A_Mag');
model.result('pg2').feature('surf1').set('expr', '1');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result('pg3').set('data', 'dset2');
model.result('pg3').create('arws1', 'ArrowSurface');
model.result('pg3').create('arws2', 'ArrowSurface');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').create('ann1', 'Annotation');
model.result('pg3').feature('arws1').create('col', 'Color');
model.result('pg3').feature('arws1').create('def', 'Deform');
model.result('pg3').feature('arws1').feature('col').set('expr', 'comp1.solid.cnt1.Tn');
model.result('pg3').feature('arws2').create('col', 'Color');
model.result('pg3').feature('arws2').create('def', 'Deform');
model.result('pg3').feature('arws2').feature('col').set('expr', 'comp1.solid.cnt1.Ttnorm');
model.result('pg3').feature('surf1').set('expr', '1');
model.result('pg3').feature('surf1').create('def', 'Deform');
model.result('pg4').set('probetag', 'window3');
model.result('pg4').create('tblp1', 'Table');
model.result('pg4').feature('tblp1').set('probetag', 'pbnd17/ppb17,var5,var6');
model.result('pg5').set('probetag', 'window2');
model.result('pg5').create('tblp1', 'Table');
model.result('pg5').feature('tblp1').set('probetag', 'var4,var7,var9,var14,var15,var17,var21');
model.result('pg6').create('arwl1', 'ArrowLine');
model.result('pg7').set('probetag', 'window4_default');
model.result('pg7').create('tblp1', 'Table');
model.result('pg7').feature('tblp1').set('probetag', 'var8,var10,var11,var12,var16,var18,var19,var20,bnd1,var22');
model.result.export.create('anim1', 'Animation');
model.result.export.create('anim2', 'Animation');

model.component('comp1').probe('var6').genResult([]);
model.component('comp1').probe('var4').genResult([]);
model.component('comp1').probe('var7').genResult([]);
model.component('comp1').probe('var8').genResult([]);
model.component('comp1').probe('var9').genResult([]);
model.component('comp1').probe('var10').genResult([]);
model.component('comp1').probe('var11').genResult([]);
model.component('comp1').probe('var12').genResult([]);
model.component('comp1').probe('var22').genResult([]);
model.component('comp1').probe('var14').genResult([]);
model.component('comp1').probe('var21').genResult([]);
model.component('comp1').probe('var15').genResult([]);
model.component('comp1').probe('var16').genResult([]);
model.component('comp1').probe('var17').genResult([]);
model.component('comp1').probe('var18').genResult([]);
model.component('comp1').probe('var19').genResult([]);
model.component('comp1').probe('var20').genResult([]);
model.component('comp1').probe('bnd1').genResult([]);

model.nodeGroup.create('grp1', 'Definitions', 'comp1');
model.nodeGroup('grp1').set('type', 'probe');
model.nodeGroup('grp1').placeAfter([]);
model.nodeGroup.create('grp2', 'Definitions', 'comp1');
model.nodeGroup('grp2').set('type', 'probe');
model.nodeGroup.move('grp2', 1);
model.nodeGroup('grp2').placeAfter([]);
model.nodeGroup.create('grp3', 'Definitions', 'comp1');
model.nodeGroup('grp3').set('type', 'probe');
model.nodeGroup.move('grp3', 2);
model.nodeGroup('grp3').placeAfter([]);
model.nodeGroup.create('grp4', 'Definitions', 'comp1');
model.nodeGroup('grp4').set('type', 'probe');
model.nodeGroup.move('grp4', 3);
model.nodeGroup('grp4').placeAfter([]);
model.nodeGroup.create('dset1solidlgrp', 'Results');
model.nodeGroup('dset1solidlgrp').set('type', 'plotgroup');
model.nodeGroup('dset1solidlgrp').placeAfter('plotgroup', 'pg1');
model.nodeGroup.create('grp5', 'Definitions', 'comp1');
model.nodeGroup('grp5').set('type', 'probe');
model.nodeGroup.move('grp5', 5);
model.nodeGroup('grp5').placeAfter([]);

model.study('std1').feature('stat').set('plot', true);
model.study('std1').feature('stat').set('plotgroup', 'pg3');
model.study('std1').feature('stat').set('mesh', {'geom1' 'mesh2'});
model.study('std1').feature('stat').set('useparam', true);
model.study('std1').feature('stat').set('sweeptype', 'filled');
model.study('std1').feature('stat').set('pname', {'para'});
model.study('std1').feature('stat').set('plistarr', {'range(0,istep,istop)'});
model.study('std1').feature('stat').set('punit', {''});

model.sol('sol1').attach('std1');
model.sol('sol1').feature('v1').set('clistctrl', {'p1'});
model.sol('sol1').feature('v1').set('cname', {'para'});
model.sol('sol1').feature('v1').set('clist', {'range(0,istep,istop)'});
model.sol('sol1').feature('v1').feature('comp1_solid_pw').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_pw').set('scaleval', 100000000);
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_lower').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_Tn_lower').set('scaleval', 100000000);
model.sol('sol1').feature('v1').feature('comp1_solid_Tt_lower').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_solid_Tt_lower').set('scaleval', 10000000);
model.sol('sol1').feature('v1').feature('comp1_u_solid').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u_solid').set('scaleval', '1e-2*0.03628926700830427');
model.sol('sol1').feature('s1').set('probesel', 'none');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('p1').set('sweeptype', 'filled');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'para'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(0,istep,istop)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {''});
model.sol('sol1').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol1').feature('s1').feature('p1').set('uselsqdata', false);
model.sol('sol1').feature('s1').feature('p1').set('plot', true);
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg3');
model.sol('sol1').feature('s1').feature('se1').set('maxsegiter', 15);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').label('Solid Mechanics');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_u_solid' 'comp1_solid_pw' 'comp1_ODE1'});
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subdtech', 'ddog');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subiter', 7);
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subtermauto', 'itertol');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol1').feature('s1').feature('se1').feature('ls1').set('segvar', {'comp1_solid_Tn_lower' 'comp1_solid_Tt_lower'});
model.sol('sol1').feature('s1').feature('d1').label('Suggested Direct Solver (solid)');
model.sol('sol1').feature('s1').feature('i1').label('Suggested Iterative Solver (solid)');
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 40);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.8);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.8);
model.sol('sol1').runAll;

model.result.dataset('dset2').label('Probe Solution 2');
model.result.dataset('dset2').set('frametype', 'spatial');
model.result.dataset('dset3').label('Probe Solution 3');
model.result.dataset('avh1').set('data', 'dset3');
model.result.numerical('gev2').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.numerical('gev3').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.numerical('gev4').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.numerical('gev5').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.numerical('gev6').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.numerical('gev7').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.numerical('gev8').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.numerical('gev9').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.numerical('gev10').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.numerical('gev11').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.numerical('gev12').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.numerical('gev13').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.numerical('gev14').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.numerical('gev15').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.numerical('gev16').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.numerical('gev17').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.numerical('pev1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.numerical('gev18').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.numerical('gev2').setResult;
model.result.numerical('gev3').appendResult;
model.result.numerical('gev4').appendResult;
model.result.numerical('gev5').appendResult;
model.result.numerical('gev6').appendResult;
model.result.numerical('gev7').appendResult;
model.result.numerical('gev8').appendResult;
model.result.numerical('gev9').appendResult;
model.result.numerical('gev10').appendResult;
model.result.numerical('gev11').appendResult;
model.result.numerical('gev12').appendResult;
model.result.numerical('gev13').appendResult;
model.result.numerical('gev14').appendResult;
model.result.numerical('gev15').appendResult;
model.result.numerical('gev16').appendResult;
model.result.numerical('gev17').appendResult;
model.result.numerical('pev1').appendResult;
model.result.numerical('gev18').appendResult;
model.result('pg1').label('Stress (solid)');
model.result('pg1').set('looplevel', [3]);
model.result('pg1').set('view', 'view4');
model.result('pg1').feature('surf1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result('pg1').feature('surf1').set('colortable', 'RainbowLight');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg2').label('Boundary Loads (solid)');
model.result('pg2').set('titletype', 'custom');
model.result('pg2').set('typeintitle', false);
model.result('pg2').set('descriptionintitle', false);
model.result('pg2').set('unitintitle', false);
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('showlegendsunit', true);
model.result('pg2').feature('arws1').label('Boundary Load 1');
model.result('pg2').feature('arws1').set('expr', {'solid.bndl1.F_Ax' 'solid.bndl1.F_Ay' 'solid.bndl1.F_Az'});
model.result('pg2').feature('arws1').set('descr', 'Load (spatial frame)');
model.result('pg2').feature('arws1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result('pg2').feature('arws1').set('placement', 'gausspoints');
model.result('pg2').feature('arws1').set('arrowbase', 'head');
model.result('pg2').feature('arws1').set('scale', 4.1356653502354395E-4);
model.result('pg2').feature('arws1').set('scaleactive', false);
model.result('pg2').feature('arws1').feature('col').set('coloring', 'gradient');
model.result('pg2').feature('arws1').feature('col').set('topcolor', 'red');
model.result('pg2').feature('arws1').feature('def').set('scaleactive', true);
model.result('pg2').feature('surf1').active(false);
model.result('pg2').feature('surf1').label('Gray Surfaces');
model.result('pg2').feature('surf1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result('pg2').feature('surf1').set('coloring', 'uniform');
model.result('pg2').feature('surf1').set('color', 'gray');
model.result('pg2').feature('surf1').set('resolution', 'normal');
model.result('pg2').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg3').label('Contact (solid)');
model.result('pg3').set('titletype', 'custom');
model.result('pg3').set('typeintitle', false);
model.result('pg3').set('descriptionintitle', false);
model.result('pg3').set('unitintitle', false);
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').set('showlegendsunit', true);
model.result('pg3').set('legendpos', 'rightdouble');
model.result('pg3').feature('arws1').label('Contact 1, Pressure');
model.result('pg3').feature('arws1').set('expr', {'solid.cnt1.Tnx' 'solid.cnt1.Tny' 'solid.cnt1.Tnz'});
model.result('pg3').feature('arws1').set('descr', 'Contact pressure (spatial frame)');
model.result('pg3').feature('arws1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result('pg3').feature('arws1').set('placement', 'gausspoints');
model.result('pg3').feature('arws1').set('arrowbase', 'head');
model.result('pg3').feature('arws1').set('scale', 3.0628838682393166E-4);
model.result('pg3').feature('arws1').set('scaleactive', false);
model.result('pg3').feature('arws1').feature('col').set('coloring', 'gradient');
model.result('pg3').feature('arws1').feature('col').set('topcolor', 'green');
model.result('pg3').feature('arws1').feature('def').set('scaleactive', true);
model.result('pg3').feature('arws2').label('Contact 1, Friction force');
model.result('pg3').feature('arws2').set('expr', {'solid.cnt1.Ttx' 'solid.cnt1.Tty' 'solid.cnt1.Ttz'});
model.result('pg3').feature('arws2').set('descr', 'Friction force (spatial frame)');
model.result('pg3').feature('arws2').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result('pg3').feature('arws2').set('placement', 'gausspoints');
model.result('pg3').feature('arws2').set('scale', 1.9937657750504972E-4);
model.result('pg3').feature('arws2').set('scaleactive', false);
model.result('pg3').feature('arws2').feature('col').set('coloring', 'gradient');
model.result('pg3').feature('arws2').feature('col').set('topcolor', 'magenta');
model.result('pg3').feature('arws2').feature('def').set('scaleactive', true);
model.result('pg3').feature('surf1').active(false);
model.result('pg3').feature('surf1').label('Gray Surfaces');
model.result('pg3').feature('surf1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result('pg3').feature('surf1').set('coloring', 'uniform');
model.result('pg3').feature('surf1').set('color', 'gray');
model.result('pg3').feature('surf1').set('smooth', 'internal');
model.result('pg3').feature('surf1').set('resolution', 'normal');
model.result('pg3').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg3').feature('ann1').set('text', '______V');
model.result('pg3').feature('ann1').set('posexpr', {'tx0' 'ty0' 'tz0'});
model.result('pg3').feature('ann1').set('posprecision', 1);
model.result('pg3').feature('ann1').set('exprprecision', 1);
model.result('pg3').feature('ann1').set('color', 'blue');
model.result('pg3').feature('ann1').set('anchorpoint', 'middleleft');
model.result('pg3').feature('ann1').set('orientation', 'vertical');
model.result('pg4').label('Probe Plot Group 4');
model.result('pg4').set('xlabel', 'para ');
model.result('pg4').set('ylabel', 'Pressure (1)');
model.result('pg4').set('windowtitle', 'Probe Plot 3');
model.result('pg4').set('xlabelactive', false);
model.result('pg4').set('ylabelactive', false);
model.result('pg4').feature('tblp1').label('Probe Table Graph 1');
model.result('pg4').feature('tblp1').set('legend', true);
model.result('pg5').label('Probe Plot Group 5');
model.result('pg5').set('xlabel', 'para ');
model.result('pg5').set('windowtitle', 'Probe Plot 2');
model.result('pg5').set('xlabelactive', false);
model.result('pg5').feature('tblp1').label('Probe Table Graph 1');
model.result('pg5').feature('tblp1').set('legend', true);
model.result('pg6').feature('arwl1').set('expr', {'solid.cnt1.Tnx' 'solid.cnt1.Tny' 'solid.cnt1.Tnz'});
model.result('pg6').feature('arwl1').set('descr', 'Contact pressure (spatial frame)');
model.result('pg6').feature('arwl1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result('pg6').feature('arwl1').set('placement', 'elements');
model.result('pg6').feature('arwl1').set('scale', 9.103575621482257E-4);
model.result('pg6').feature('arwl1').set('scaleactive', false);
model.result('pg7').label('Probe Plot Group 7');
model.result('pg7').set('xlabel', 'para ');
model.result('pg7').set('windowtitle', 'Probe Plot 4');
model.result('pg7').set('xlabelactive', false);
model.result('pg7').feature('tblp1').label('Probe Table Graph 1');
model.result('pg7').feature('tblp1').set('legend', true);
model.result.export('anim1').set('plotgroup', 'pg3');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('solnumtype', 'inner');
model.result.export('anim1').set('framesel', 'all');
model.result.export('anim1').set('shownparameter', 'idz=1');
model.result.export('anim1').set('frametime', 0.01);
model.result.export('anim1').set('legend3d', false);
model.result.export('anim1').set('fontsize', '9');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'off');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'off');
model.result.export('anim1').set('logo3d', 'off');
model.result.export('anim1').set('options3d', 'on');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim2').set('plotgroup', 'pg3');
model.result.export('anim2').set('movietype', 'webm');
model.result.export('anim2').set('webmfilename', '/home/bsadrfa/behzad/projects/biotac/comsol/outputs/planar-z-1-y-contact-xy-mu-2,10.webm');
model.result.export('anim2').set('fps', 15);
model.result.export('anim2').set('solnumtype', 'inner');
model.result.export('anim2').set('maxframes', 81);
model.result.export('anim2').set('width', 800);
model.result.export('anim2').set('height', 600);
model.result.export('anim2').set('fontsize', '9');
model.result.export('anim2').set('customcolor', [1 1 1]);
model.result.export('anim2').set('background', 'color');
model.result.export('anim2').set('gltfincludelines', 'on');
model.result.export('anim2').set('title1d', 'on');
model.result.export('anim2').set('legend1d', 'on');
model.result.export('anim2').set('logo1d', 'on');
model.result.export('anim2').set('options1d', 'on');
model.result.export('anim2').set('title2d', 'on');
model.result.export('anim2').set('legend2d', 'on');
model.result.export('anim2').set('logo2d', 'on');
model.result.export('anim2').set('options2d', 'off');
model.result.export('anim2').set('title3d', 'on');
model.result.export('anim2').set('legend3d', 'on');
model.result.export('anim2').set('logo3d', 'off');
model.result.export('anim2').set('options3d', 'on');
model.result.export('anim2').set('axisorientation', 'on');
model.result.export('anim2').set('grid', 'on');
model.result.export('anim2').set('axes1d', 'on');
model.result.export('anim2').set('axes2d', 'on');
model.result.export('anim2').set('showgrid', 'on');

model.nodeGroup('grp1').label('Group 0');
model.nodeGroup('grp1').add('probe', 'pbnd13');
model.nodeGroup('grp1').add('probe', 'pbnd14');
model.nodeGroup('grp1').add('probe', 'pbnd15');
model.nodeGroup('grp1').add('probe', 'pbnd16');
model.nodeGroup('grp2').label('Group 1');
model.nodeGroup('grp2').add('probe', 'pbnd1');
model.nodeGroup('grp2').add('probe', 'pbnd2');
model.nodeGroup('grp2').add('probe', 'pbnd3');
model.nodeGroup('grp2').add('probe', 'pbnd4');
model.nodeGroup('grp2').add('probe', 'pbnd5');
model.nodeGroup('grp3').label('Group 2');
model.nodeGroup('grp3').add('probe', 'pbnd6');
model.nodeGroup('grp3').add('probe', 'pbnd7');
model.nodeGroup('grp3').add('probe', 'pbnd8');
model.nodeGroup('grp3').add('probe', 'pbnd9');
model.nodeGroup('grp3').add('probe', 'pbnd10');
model.nodeGroup('grp3').add('probe', 'pbnd11');
model.nodeGroup('grp3').add('probe', 'pbnd12');
model.nodeGroup('grp4').label('Global Variables');
model.nodeGroup('grp4').add('probe', 'var6');
model.nodeGroup('grp4').add('probe', 'var4');
model.nodeGroup('grp4').add('probe', 'var7');
model.nodeGroup('grp4').add('probe', 'var8');
model.nodeGroup('grp4').add('probe', 'var9');
model.nodeGroup('grp4').add('probe', 'var10');
model.nodeGroup('grp4').add('probe', 'var11');
model.nodeGroup('grp4').add('probe', 'var12');
model.nodeGroup('grp4').add('probe', 'var22');
model.nodeGroup('dset1solidlgrp').label('Applied Loads (solid)');
model.nodeGroup('dset1solidlgrp').add('plotgroup', 'pg2');
model.nodeGroup('grp5').label('Global Variables Shear');
model.nodeGroup('grp5').add('probe', 'var14');
model.nodeGroup('grp5').add('probe', 'var21');
model.nodeGroup('grp5').add('probe', 'var15');
model.nodeGroup('grp5').add('probe', 'var16');
model.nodeGroup('grp5').add('probe', 'var17');
model.nodeGroup('grp5').add('probe', 'var18');
model.nodeGroup('grp5').add('probe', 'var19');
model.nodeGroup('grp5').add('probe', 'var20');
model.nodeGroup('grp5').add('probe', 'bnd1');

out = model;
